//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Material.Framework.Metadata;
using Material.Domain.ResourceProviders;
using System;
using System.Collections.Generic;
using Material.Framework.Enums;
using System.Net;
using Material.Framework.Metadata.Formatters;
using Material.Domain.Core;
using System.CodeDom.Compiler;

namespace Material.Domain.Requests
{     
    /// <summary>
    /// Returns a collection of zero or more channel resources that match the request criteria
    /// </summary>
    [ServiceType(typeof(Youtube))]
	[GeneratedCode("T4Toolbox", "14.0")]
	public partial class YoutubeChannels : OAuthRequest              
	{
        public override String Host => "https://www.googleapis.com";
        public override String Path => "/youtube/v3/channels";
        public override String HttpMethod => "GET";
        public override List<MediaType> Produces => new List<MediaType> { MediaType.Json };
        public override List<MediaType> Consumes => new List<MediaType> { MediaType.Json };
        public override List<HttpStatusCode> ExpectedStatusCodes => new List<HttpStatusCode> { HttpStatusCode.OK };
        public override List<String> RequiredScopes => new List<String> { "https://www.googleapis.com/auth/youtube" };
        /// <summary>
        /// The part parameter specifies a comma-separated list of one or more channel resource properties that the API response will include [auditDetails,brandingSettings,contentDetails,contentOwnerDetails,id,invideoPromotion,localizations,snippet,statistics,status,topicDetails]
        /// </summary>
        [Name("part")]
        [ParameterType(RequestParameterType.Query)]
        [Required()]
        [DefaultFormatter()]
        public  String Part { get; set; } = "statistics";
        /// <summary>
        /// The categoryId parameter specifies a YouTube guide category, thereby requesting YouTube channels associated with that category
        /// </summary>
        [Name("categoryId")]
        [ParameterType(RequestParameterType.Query)]
        [DefaultFormatter()]
        public  String CategoryId { get; set; }
        /// <summary>
        /// The forUsername parameter specifies a YouTube username, thereby requesting the channel associated with that username.
        /// </summary>
        [Name("forUsername")]
        [ParameterType(RequestParameterType.Query)]
        [DefaultFormatter()]
        public  String ForUsername { get; set; }
        /// <summary>
        /// The id parameter specifies a comma-separated list of the YouTube channel ID(s) for the resource(s) that are being retrieved. In a channel resource, the id property specifies the channel's YouTube channel ID.
        /// </summary>
        [Name("id")]
        [ParameterType(RequestParameterType.Query)]
        [DefaultFormatter()]
        public  String Id { get; set; }
        /// <summary>
        /// This parameter can only be used in a properly authorized request. Set this parameter's value to true to instruct the API to only return channels owned by the authenticated user.
        /// </summary>
        [Name("mine")]
        [ParameterType(RequestParameterType.Query)]
        [DefaultFormatter()]
        public  Nullable<Boolean> Mine { get; set; }
        /// <summary>
        /// The maxResults parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are 0 to 50, inclusive. The default value is 5
        /// </summary>
        [Name("maxResults")]
        [ParameterType(RequestParameterType.Query)]
        [DefaultFormatter()]
        public  Nullable<Int32> MaxResults { get; set; }
        /// <summary>
        /// The pageToken parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved
        /// </summary>
        [Name("pageToken")]
        [ParameterType(RequestParameterType.Query)]
        [DefaultFormatter()]
        public  String PageToken { get; set; }
	}
}
