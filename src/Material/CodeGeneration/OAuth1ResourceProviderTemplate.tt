<#@ include file="T4Toolbox.tt" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@  assembly name="$(TargetDir)CodeGen.dll" #>
<#@  assembly name="$(TargetDir)Material.Portable.dll" #>
<#@  assembly name="System.Core" #>
<#@  assembly name="System.Runtime" #>
<#@ import namespace="CodeGen" #>
<#+
    public class OAuth1ResourceProviderTemplate : Template
    {
        private readonly BoxedOAuth1ResourceProvider _source;
        private readonly string _namespace;

        public OAuth1ResourceProviderTemplate(
            string ns, 
            BoxedOAuth1ResourceProvider source)
        {
            _namespace = ns;
            _source = source;
        }

	    public override string TransformText()
        {
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Material.Domain.Credentials;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using Material.Framework.Enums;
using Material.Framework.Metadata;
using Material.Domain.Core;

namespace <#= _namespace #>
{     
    /// <summary>
    /// <#= _source.Comments #>
    /// </summary>
    [CredentialType(typeof(OAuth1Credentials))]
	[GeneratedCode("T4Toolbox", "14.0")]
	public partial class <#= _source.Name #>  : OAuth1ResourceProvider 
    {
        public override Uri RequestUrl { get; } = new Uri("<#= _source.RequestUrl.ToString() #>");
        public override Uri AuthorizationUrl { get; } = new Uri("<#= _source.AuthorizationUrl.ToString() #>");
        public override Uri TokenUrl { get; } = new Uri("<#= _source.TokenUrl.ToString() #>");
        public override HttpParameterType ParameterType { get; } = HttpParameterType.<#= _source.ParameterType.ToString() #>;
        public override bool SupportsCustomUrlScheme { get; } = <#= _source.SupportsCustomUrlScheme.ToString().ToLower() #>;
    }
}
<#+
            return this.GenerationEnvironment.ToString();
        }
    }
#>