<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BluetoothConnectivityException" xml:space="preserve">
    <value>Could not connect to bluetooth device at address {0}</value>
  </data>
  <data name="GPSDisabledConnectivityException" xml:space="preserve">
    <value>GPS device is not enabled</value>
  </data>
  <data name="GPSTimeoutConnectivityException" xml:space="preserve">
    <value>Could not get a GPS lock in the given timeout period</value>
  </data>
  <data name="GrantTypeNotSupportedException" xml:space="preserve">
    <value>Cannot use Grant Type {0} with resource provider {1}</value>
  </data>
  <data name="OAuthCallbackResponse" xml:space="preserve">
    <value>Thanks for sharing!</value>
  </data>
  <data name="OfflineConnectivityException" xml:space="preserve">
    <value>The HTTP request cannot be made because this device is not connected to the internet</value>
  </data>
  <data name="ScopeException" xml:space="preserve">
    <value>The requested scope {0} is not valid for the resource provider {1}</value>
  </data>
  <data name="CallbackParameterInvalidException" xml:space="preserve">
    <value>One or more of the parameters in the callback uri was invalid</value>
  </data>
  <data name="BluetoothDialogBody" xml:space="preserve">
    <value>Connecting to {0}</value>
  </data>
  <data name="BluetoothDialogTitle" xml:space="preserve">
    <value>Please Wait</value>
  </data>
  <data name="GPSAuthorizationException" xml:space="preserve">
    <value>Access to GPS was not granted</value>
  </data>
  <data name="FlowTypeNotSupported" xml:space="preserve">
    <value>{0} flow is not supported with the service {1} (did you forget to provide a client secret?)</value>
  </data>
  <data name="FormatMetadataMissing" xml:space="preserve">
    <value>All request parameters must have format metadata</value>
  </data>
  <data name="ShortTermAccessTokenExchangeException" xml:space="preserve">
    <value>Cannot exchange client access token for long lived access token</value>
  </data>
  <data name="InvalidJsonWebTokenAlgorithm" xml:space="preserve">
    <value>The given Json Web Token algorithm has not been whitelisted</value>
  </data>
  <data name="ResponseTypeNotSupported" xml:space="preserve">
    <value>A {0} response is not supported with the service {1}</value>
  </data>
  <data name="InvalidJsonWebTokenSignature" xml:space="preserve">
    <value>The Json Web Token signature could not be validated</value>
  </data>
  <data name="WebTokenExpired" xml:space="preserve">
    <value>The Json Web Token is expired</value>
  </data>
  <data name="MissingPublicKey" xml:space="preserve">
    <value>Could not find public key at discovery endpoint</value>
  </data>
  <data name="WebTokenAlreadySigned" xml:space="preserve">
    <value>Cannot resign web token that has already been signed</value>
  </data>
  <data name="WebTokenIsReadonly" xml:space="preserve">
    <value>Cannot modify property {0} on a web token that has already been signed</value>
  </data>
  <data name="InvalidJsonWebTokenAudience" xml:space="preserve">
    <value>The audience claim in the given Json Web Token did not match the clientId</value>
  </data>
  <data name="InvalidJsonWebTokenIssuer" xml:space="preserve">
    <value>The Json Web Token issuer did not match one of the given valid issuers</value>
  </data>
  <data name="InvalidJsonWebTokenNonce" xml:space="preserve">
    <value>The Json Web Token nonce does not match the nonce supplied by the application</value>
  </data>
  <data name="ProgressDialogTitle" xml:space="preserve">
    <value>Please Wait</value>
  </data>
  <data name="WebProgressDialogText" xml:space="preserve">
    <value>Loading login page</value>
  </data>
  <data name="SecurityParameterAlreadyExists" xml:space="preserve">
    <value>The security parameter {0} already exists for userId {1}. (Did the same user try to authorize twice without completing the workflow?)</value>
  </data>
  <data name="SecurityParameterDoesNotExist" xml:space="preserve">
    <value>The security parameter {0} does not exist for userId {1}</value>
  </data>
  <data name="InitializationError" xml:space="preserve">
    <value>Did you forget to call Platform.Current.Initialize() before making a request?</value>
  </data>
  <data name="AlgorithmNotSupported" xml:space="preserve">
    <value>The algorithm {0} is not supported for Json Web Token signing</value>
  </data>
  <data name="AsymmetricKeyException" xml:space="preserve">
    <value>This key is not an asymmetric key</value>
  </data>
  <data name="BadHttpRequestException" xml:space="preserve">
    <value>Received HTTP status code {0} but expected {1}. Body content : {2}</value>
  </data>
  <data name="ContentTypeNotSupported" xml:space="preserve">
    <value>No serializer found for content type {0}</value>
  </data>
  <data name="GetWithBodyNotSupported" xml:space="preserve">
    <value>Cannot make an HTTP Get request with a body</value>
  </data>
  <data name="HeaderParametersNotSupported" xml:space="preserve">
    <value>Cannot add header query or body parameters</value>
  </data>
  <data name="UnknownMediaType" xml:space="preserve">
    <value>Cannot deserialize content with media type {0}</value>
  </data>
  <data name="MissingRequiredRequestParameter" xml:space="preserve">
    <value>The parameter {0} is required for a request to {1} but a value has not been provided</value>
  </data>
</root>